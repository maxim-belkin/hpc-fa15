{"name":"High-Performance Computing (Fall 2015)","tagline":"CSE Training Workshops in HPC Tools","body":"This workshop series is held in the [Siebel Computer Lab, Room 0218](https://www.google.com/maps/place/Thomas+M.+Siebel+Center+for+Computer+Science,+201+N+Goodwin+Ave,+Urbana,+IL+61801). <br>\r\nWalk-ins are welcome and encouraged!\r\n\r\n***\r\n\r\n# [Introduction to The Linux Command Line (Bash Shell)](#bash)\r\n### Oct. 14, 10:00 am – noon • SCL 0218\r\n\r\nWhen you open up a command line or need to execute a script, it's an alien world:  `man` pages, terse and cryptic commands, unanticipated shortcuts and complications.  We will review many of the most common commands necessary to effectively use the command line for running code and managing data, as well as scripting and more advanced topics.\r\n\r\n#### Topics\r\n- Common commands\r\n- Environment variables\r\n- Scripting & program logic\r\n\r\n#### Materials\r\n- [Exercises](https://github.com/maxim-belkin/hpc-fa15/blob/gh-pages/lessons/bash-exercises.md)\r\n- [Notes](https://github.com/maxim-belkin/hpc-fa15/blob/gh-pages/lessons/bash.md)\r\n- [Data](https://github.com/maxim-belkin/hpc-fa15/blob/gh-pages/lessons/data.tar.gz?raw=true)\r\n\r\n***\r\n\r\n\r\n# [Introduction to Scientific Computing on a Cluster](#hpc)\r\n### Oct. 21, 10:00 am – noon • SCL 0218\r\n\r\n<blockquote>This workshop is designed to answer the question, \"I've got a supercomputer account—now what?\"</blockquote>\r\n\r\nThis is intended to give you a whirlwind tour of the issues underlying scientific computing, particularly as that is practiced on modern distributed clusters.  What you should walk out of here with is exposure to the high-level concepts of scientific computing as a software engineering activity.  At the least you will have a list of topics to dig deeper into, because semester-long courses have been written to introduce scientific computing.\r\n\r\n- Scientific computing\r\n- Strategies (architecture, parallelization, scaling)\r\n- Running code (shells, job queues, scripts)\r\n- Compiling code (makefiles, linking)\r\n- Building and debugging scientific codes (numerical error, valgrind)\r\n\r\n- [Lesson notes](https://github.com/maxim-belkin/hpc-fa15/blob/gh-pages/lessons/scicomp.md)\r\n\r\n- Numerical Error workbook\r\n    - [Blank copy](https://raw.githubusercontent.com/maxim-belkin/hpc-fa15/gh-pages/lessons/numerical-error-working.ipynb)\r\n    - [Full copy](https://raw.githubusercontent.com/maxim-belkin/hpc-fa15/gh-pages/lessons/numerical-error.ipynb)\r\n    - [Static view](http://nbviewer.ipython.org/github/maxim-belkin/hpc-fa15/blob/gh-pages/lessons/numerical-error.ipynb)\r\n\r\n***\r\n\r\n\r\n# [Introduction to Illinois Campus Cluster](#hpc)\r\n### Oct. 28, 10:00 am – noon • SCL 0218\r\n\r\nWhile the prior workshop focuses on scientific cluster computing writ large, this workshop will focus more on the workflow, libraries, and environment of the [Illinois Campus Cluster Program](http://campuscluster.illinois.edu/).  Representatives of Campus Cluster will be present as well to answer user questions.\r\n\r\n- Background, design of Campus Cluster\r\n- Access\r\n- Filesystem\r\n- Running code (Torque/PBS queueing)\r\n- Compilation, libraries\r\n- Making CC a bit friendlier to use\r\n- CC user resources\r\n\r\nCampus Cluster is now hosting walk-in help in 3101 NCSA, from 9 am to 5 pm, Mon through Fri.\r\n\r\n- [Lesson notes](https://github.com/maxim-belkin/hpc-fa15/blob/gh-pages/lessons/iccp-intro.md)\r\n\r\n\r\n***\r\n\r\n\r\n# [Threaded Parallel Programming for Engineers (OpenMP)](#omp)\r\n### Nov. 4, 10:00 am – noon • SCL 0218\r\n\r\n[OpenMP](http://openmp.org/wp/) is a set of extensions to the C, C++, and Fortran languages to allow the effective control of multiple cores on shared-memory machines, such as desktop computers or single nodes of supercomputers.  With a few well-placed annotations and some judicious restructuring of your current code, you can start seeing speedups from effectively using multiple processes immediately.  We will discuss the basics of OpenMP and examine some applications as well.  Programming experience with C or C++ is assumed.\r\n\r\nTo use the interactive notebook, please open a terminal and execute the commands:\r\n\r\n```\r\n    cd\r\n    cd Desktop\r\n    module load gcc canopy\r\n    ipython notebook omp-c.ipynb\r\n```\r\n\r\n- [Interactive notes](https://raw.githubusercontent.com/maxim-belkin/hpc-fa15/gh-pages/lessons/omp-c.ipynb)\r\n- [Static view](http://nbviewer.ipython.org/github/maxim-belkin/hpc-fa15/blob/gh-pages/lessons/omp-c.ipynb)\r\n\r\n\r\n***\r\n\r\n\r\n# [Distributed Parallel Programming for Engineers (MPI)](#mpi)\r\n### Nov. 11, 10:00 am – noon • SCL 0218\r\n\r\nThe [Message-Passing Interface](http://www.mcs.anl.gov/research/projects/mpi/) is the _de facto_ standard for all large-scale distributed-memory cluster computing.  We will examine the basics of this standard in C (and can touch on C++ and Fortran), as well as discuss some numerical coding applications and considerations.  Programming experience with C or C++ is assumed.\r\n\r\nTo use the interactive notebook, please open a terminal and execute the commands:\r\n\r\n```\r\n    cd\r\n    cd Desktop\r\n    module load gcc canopy\r\n    ipython notebook mpi-c.ipynb\r\n```\r\n\r\n- [Interactive notes](https://raw.githubusercontent.com/maxim-belkin/hpc-fa15/gh-pages/lessons/mpi-c.ipynb)\r\n- [Static view](http://nbviewer.ipython.org/github/maxim-belkin/hpc-fa15/blob/gh-pages/lessons/mpi-c.ipynb)\r\n\r\n***\r\n\r\n\r\n\r\n# About These Workshops\r\n### Contributors\r\nNeal Davis developed these materials for [Computational Science and Engineering](http://cse.illinois.edu/).  The command line materials also draw from [Software Carpentry](http://software-carpentry.org/)'s excellent tutorials. This content is available under a Creative Commons Attribution 3.0 Unported License.\r\n\r\n![CC-BY-3.0](https://i.creativecommons.org/l/by/3.0/88x31.png)\r\n\r\n# Contact\r\nIf you have any questions about course availability, concepts, or content, please contact Neal Davis, Training Coördinator for Computational Science & Engineering, at davis68 at illinois dot edu.\r\n","google":"UA-53962544-8","note":"Don't delete this file! It's used internally to help with page regeneration."}